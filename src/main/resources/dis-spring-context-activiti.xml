<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Activiti Configuration</description>
	
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jeesite.properties" />
	
	<!-- Activiti处理引擎的配置，交由Spring管理  Activiti begin -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 配置数据源,和系统使用同一个数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 统一的事务管理 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="deploymentResources" value="classpath*:/act/deployments/**/*.bar"/><!-- 自动部署 -->
		<property name="databaseSchemaUpdate" value="true" /><!-- 数据库脚本更新策略，true表不存在时自动创建并会检查更新数据库表版本 -->
		<property name="jobExecutorActivate" value="true" /><!-- 设置是否启用作业执行功能，true不停刷新作业表检查是否有需要执行的作业有则执行 -->
		<property name="history" value="full" /><!-- 设置记录历史记录的级别，full保存最完整的记录 -->
		<property name="processDefinitionCacheLimit" value="10"/>

		<!-- 由Spring管理变量 -->
		<property name="beans">
			<map>
				<entry key="deal" value-ref="deal"></entry>
			</map>
		</property>

        <!-- UUID作为主键生成策略 -->
        <property name="idGenerator" ref="idGen" />
        
        <!-- 生成流程图的字体 避免中文乱码-->
        <property name="activityFontName" value="${activiti.diagram.activityFontName}"/><!-- 宋体 -->
        <property name="labelFontName" value="${activiti.diagram.labelFontName}"/><!-- 宋体 -->
        
        <!-- 自定义用户权限 -->
        <property name="customSessionFactories"> 
            <list>
				<bean class="com.thinkgem.jeesite.modules.act.service.ext.ActUserEntityServiceFactory"/>
				<!-- TODO  要改 --><bean class="com.thinkgem.jeesite.modules.act.service.ext.ActGroupEntityServiceFactory"/>
            </list>
    	</property>
        
	</bean>
	
	<!-- 与Spring整合的流程引擎 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	
	<!-- 为工厂bean,工厂方法为getObject(),返回获得对象的factory-method的方法值 -->
	<!-- 提供了管理和控制发布包和流程定义的操作 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<!-- 负责启动一个流程定义的新实例,用来获取和保存流程变量 -->
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<!-- 提供了启动表单和任务表单两个概念,启动表单会在流程实例启动之前展示给用户， 任务表单会在用户完成任务时展示 -->
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	<!-- 可以管理（创建，更新，删除，查询...）群组和用户 -->
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
	<!-- 查询分配给用户或组的任务,创建独立运行任务,手工设置任务的执行者或者这些用户通过何种方式与任务关联 ,认领并完成一个任务-->
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<!-- 提供了Activiti引擎手机的所有历史数据 -->
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<!-- 查询数据库的表和表的元数据,提供了查询和管理异步操作的功能 -->
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<!-- Activiti end -->
	
</beans>